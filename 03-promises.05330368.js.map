{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SACAC,EAAAF,GAASG,OAAOC,KAAK,CACnBC,SAAU,aACVC,QAAS,GACTC,QAAS,KACTC,cAAc,IAMhB,MAAMC,EAAOC,SAASC,cAAc,SAClBD,SAASC,cAAc,gBAmBzC,SAASC,EAAcP,EAAUQ,GAmB/B,OAlBgB,IAAIC,SAAQ,CAACC,EAASC,KACpC,MAAMC,EAAgBC,KAAKC,SAAW,GAEhCC,EAAM,C,SACVf,E,MACAQ,GAGFQ,YAAW,KACLJ,GAEFF,EAAQK,GAGVJ,EAAOI,EAAI,GACVP,EAAM,G,CAOK,SAATS,GAAajB,SAAEA,EAAQQ,MAAEA,IAChCX,EAAAF,GAASG,OAAOoB,QAAQ,qBAAqBlB,QAAeQ,OAC5DW,QAAQC,IAAI,uBAAqBpB,QAAiBQ,M,CAGpD,SAASa,GAAWrB,SAAEA,EAAQQ,MAAEA,IAC9BX,EAAAF,GAASG,OAAOwB,QAAQ,oBAAoBtB,QAAeQ,OAC3DW,QAAQC,IAAI,sBAAoBpB,QAAeQ,M,CA/CjDJ,EAAKmB,iBAAiB,UAEtB,SAAqBC,GACnBA,EAAEC,iBAEF,MACEC,UAAUlB,MAAEA,EAAKmB,KAAEA,EAAIC,OAAEA,IACvBJ,EAAEK,cAEN,IAAIC,GAAgBtB,EAAMuB,MAE1B,IAAK,IAAIC,EAAI,EAAGA,IAAMJ,EAAOG,MAAOC,GAAK,EACvCzB,EAAcyB,EAAGF,GAAcG,KAAKhB,GAAciB,MAAMb,GACxDS,IAAiBH,EAAKI,K","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nNotiflix.Notify.init({\n  position: 'center-top',\n  opacity: 0.8,\n  timeout: 2500,\n  clickToClose: true,\n});\n// Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n// Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n// Notiflix.Notify.warning('Please choose a date in the future');\n\nconst form = document.querySelector('.form');\nconst submitBtn = document.querySelector('.form button');\n\nform.addEventListener('submit', runPromises);\n\nfunction runPromises(e) {\n  e.preventDefault();\n\n  const {\n    elements: { delay, step, amount },\n  } = e.currentTarget;\n\n  let promiseDelay = +delay.value;\n\n  for (let i = 1; i <= +amount.value; i += 1) {\n    createPromise(i, promiseDelay).then(onFullFilled).catch(onRejected);\n    promiseDelay += +step.value;\n  }\n}\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    const obj = {\n      position,\n      delay,\n    };\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        resolve(obj);\n      }\n      // Reject\n      reject(obj);\n    }, delay);\n  });\n\n  return promise;\n}\n\n// Колл-бекі для промісу\nfunction onFullFilled({ position, delay }) {\n  Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n  console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n}\n\nfunction onRejected({ position, delay }) {\n  Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n  console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n}\n"],"names":["$7Y9D8","parcelRequire","$parcel$interopDefault","Notify","init","position","opacity","timeout","clickToClose","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$createPromise","delay","Promise","resolve","reject","shouldResolve","Math","random","obj","setTimeout","$47d4ff9957288465$var$onFullFilled","success","console","log","$47d4ff9957288465$var$onRejected","failure","addEventListener","e","preventDefault","elements","step","amount","currentTarget","promiseDelay","value","i","then","catch"],"version":3,"file":"03-promises.05330368.js.map"}