{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SACAC,EAAAF,GAASG,OAAOC,KAAK,CACnBC,SAAU,aACVC,QAAS,GACTC,QAAS,KACTC,cAAc,IAMhB,IAAMC,EAAOC,SAASC,cAAc,SAClBD,SAASC,cAAc,gBAmBzC,SAASC,EAAcP,EAAUQ,GAmB/B,OAlBgB,IAAIC,SAAQ,SAACC,EAASC,GACpC,IAAMC,EAAgBC,KAAKC,SAAW,GAEhCC,EAAM,CACVf,WACAQ,SAGFQ,YAAW,WACLJ,GAEFF,EAAQK,GAGVJ,EAAOI,E,GACNP,E,IAOW,SAATS,EAAaC,G,IAAElB,EAAFkB,EAAElB,SAAUQ,EAAZU,EAAYV,MAChCX,EAAAF,GAASG,OAAOqB,QAAQ,qBAAoCC,OAAfpB,EAAS,QAAYoB,OAANZ,EAAM,OAClEa,QAAQC,IAAI,uBAAwCF,OAAfpB,EAAS,QAAYoB,OAANZ,EAAM,M,CAG5D,SAASe,EAAWL,G,IAAElB,EAAFkB,EAAElB,SAAUQ,EAAZU,EAAYV,MAC9BX,EAAAF,GAASG,OAAO0B,QAAQ,oBAAmCJ,OAAfpB,EAAS,QAAYoB,OAANZ,EAAM,OACjEa,QAAQC,IAAI,sBAAqCF,OAAfpB,EAAS,QAAYoB,OAANZ,EAAM,M,CA/CzDJ,EAAKqB,iBAAiB,UAEtB,SAAqBC,GACnBA,EAAEC,iBAQF,IANA,IAEmBC,EAAfF,EAAEG,cADJC,SAAYtB,EAAKoB,EAALpB,MAAOuB,EAAIH,EAAJG,KAAMC,EAAMJ,EAANI,OAGvBC,GAAgBzB,EAAM0B,MAEjBC,EAAI,EAAGA,IAAMH,EAAOE,MAAOC,GAAK,EACvC5B,EAAc4B,EAAGF,GAAcG,KAAKnB,GAAcoB,MAAMd,GACxDU,IAAiBF,EAAKG,K","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nNotiflix.Notify.init({\n  position: 'center-top',\n  opacity: 0.8,\n  timeout: 2500,\n  clickToClose: true,\n});\n// Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n// Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n// Notiflix.Notify.warning('Please choose a date in the future');\n\nconst form = document.querySelector('.form');\nconst submitBtn = document.querySelector('.form button');\n\nform.addEventListener('submit', runPromises);\n\nfunction runPromises(e) {\n  e.preventDefault();\n\n  const {\n    elements: { delay, step, amount },\n  } = e.currentTarget;\n\n  let promiseDelay = +delay.value;\n\n  for (let i = 1; i <= +amount.value; i += 1) {\n    createPromise(i, promiseDelay).then(onFullFilled).catch(onRejected);\n    promiseDelay += +step.value;\n  }\n}\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    const obj = {\n      position,\n      delay,\n    };\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        resolve(obj);\n      }\n      // Reject\n      reject(obj);\n    }, delay);\n  });\n\n  return promise;\n}\n\n// Колл-бекі для промісу\nfunction onFullFilled({ position, delay }) {\n  Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n  console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n}\n\nfunction onRejected({ position, delay }) {\n  Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n  console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n}\n"],"names":["$6JpON","parcelRequire","$parcel$interopDefault","Notify","init","position","opacity","timeout","clickToClose","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$createPromise","delay","Promise","resolve","reject","shouldResolve","Math","random","obj","setTimeout","$ce04d3a99e08e73b$var$onFullFilled","param","success","concat","console","log","$ce04d3a99e08e73b$var$onRejected","failure","addEventListener","e","preventDefault","_elements","currentTarget","elements","step","amount","promiseDelay","value","i","then","catch"],"version":3,"file":"03-promises.f5e583af.js.map"}